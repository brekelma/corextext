cd ..{
  "id": "51b85834-3b92-33e3-a05e-dd48e543ad33",
  "name": "dsbox.corextext.corex_text.corextext",
  "common_name": "DSBox Corex Text",
  "description": "Learns latent factors / topics which explain the most multivariate information in bag of words representations of documents. Returns learned topic scores for each document. Also supports hierarchical models and 'anchoring' to encourage topics to concentrate around desired words.",
  "languages": [
    "python2.7"
  ],
  "library": "dsbox",
  "version": "0.1.2",
  "source_code": "https://github.com/brekelma/corextext.git",
  "is_class": true,
  "attributes": [
    {
      "shape": "n_documents, n_topics",
      "type": "array",
      "name": "labels",
      "description": "Topic activations for each document."
    }, 
    {
      "shape": "n_terms",
      "type": "array",
      "name": "clusters",
      "description": "The topic to which each term belongs."
    }
  ],
  "parameters": [
    {
      "type": "int",
      "name": "n_hidden",
      "description": "Number of topics or latent factors to use.",
      "is_hyperparameter": true
    },
    {
      "type": "int",
      "name": "max_iter",
      "description": "Maximum number of iterations taken for the solvers to converge. ",
      "is_hyperparameter": false
    },
     {
      "type": "str",
      "name": "count",
      "description": "Specify one of {'binarize', 'fraction'}.  Binary bag of words (default) or fractional count in [0,1] w.r.t. most common term.",
      "is_hyperparameter": false
    },
    {
      "type": "int",
      "name": "seed",
      "description": "The seed of the pseudo random number generator to use. ",
      "is_hyperparameter": false
    },
    {
      "type": "int",
      "name": "verbose",
      "description": "Set true for verbose output or >1 to get even more verbosity.",
      "is_hyperparameter": false
    }
  ],
  "methods_available": [
    {
      "name": "fit",
      "id": "dsbox.corextext.corextext.CorexText.fit",
      "description": "'Fit the model according to the given training data.\n",
      "returns": {
        "type": "object",
        "name": "self",
        "description": "Returns self. '"
        },
      "parameters": [
        {
          "shape": "n_documents, n_terms",
          "type": "array-like, sparse matrix",
          "name": "X",
          "description": "Training vector, where n_documents is the number of documents and n_terms is the vocabulary size.  Matrix entries should be preprocessed to bag of word counts or tfidf score.",
          "is_hyperparameter": false
        }
        ]
    },
    {
      "name": "transform",
      "id": "dsbox.linearcorex.Corex.transform",
      "description": "'Transform data according to learned model.\n",
      "returns": {
        "type": "array-like",
        "shape": "n_documents, n_topics",
        "name": "Y",
        "description": "Returns topic activations for each document. '"
      },
      "parameters": [
        {
          "shape": "n_documents, n_terms",
          "type": "array-like, sparse matrix",
          "name": "X",
          "description": "Training vector, where n_documents is the number of documents and n_terms is the vocabulary size.  Matrix entries should be preprocessed to bag of word counts or tfidf score.",
          "is_hyperparameter": false
        }
        ]
      }
    ],
  "algorithm_type": ["Dimensionality Reduction"],
  "learning_type": ["Unsupervised learning"],
  "task_type": ["Feature extraction"],
  "tags": [
    "factor analysis"
  ],
  "is_deterministic": false,
  "handles_classification": false,
  "handles_regression": false,
  "handles_multiclass": false,
  "handles_multilabel": false,
  "input_type": [
    "DENSE",
    "SPARSE"
  ],
  "output_type": [
    "FEATURES"
  ],
  "team": "ISI",
  "schema_version": 1.0,
  "build": [{
    "type": "pip",
    "package": "corextext"
  }],
  "compute_resources": {
    "sample_size": [100, 100000],
    "sample_unit": ["MB", "MB"],
    "num_nodes": [1, 1],
    "cores_per_node": [4, 4],
    "gpus_per_node": [0, 0],
    "mem_per_node": [1, 1000],
    "disk_per_node": [1, 1000],
    "mem_per_gpu": [0, 0],
    "expected_running_time": [1, 2]
  },
  "interface_type": "dimensionality_reduction"
}